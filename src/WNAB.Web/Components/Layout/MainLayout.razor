@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStorage

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 d-flex justify-content-between align-items-center">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
            <div>
                <span class="text-muted me-2">@_userDisplay</span>
                <button class="btn btn-sm btn-outline-secondary" @onclick="SignOut">Sign Out</button>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    // LLM-Dev:v1 Mimic MAUI: show a simple signed-in indicator and allow sign-out by clearing stored id.
    private string _userDisplay = "Not signed in";

    protected override async Task OnInitializedAsync()
    {
        await RefreshUser();
    }

    private async Task RefreshUser()
    {
        try
        {
            var result = await ProtectedLocalStorage.GetAsync<string>("userId");
            var id = result.Success ? (result.Value ?? string.Empty).Trim() : string.Empty;
            _userDisplay = string.IsNullOrWhiteSpace(id) ? "Not signed in" : $"Signed in as: {id}";
        }
        catch
        {
            _userDisplay = "Not signed in";
        }
    }

    private async Task SignOut()
    {
        try
        {
            await ProtectedLocalStorage.DeleteAsync("userId");
            _userDisplay = "Not signed in";
            StateHasChanged();
        }
        catch
        {
            _userDisplay = "Not signed in";
        }
    }
}
