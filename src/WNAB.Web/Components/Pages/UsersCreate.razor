@page "/users/create"
@inject IHttpClientFactory ClientFactory

<h1>Create User</h1>

<div class="mb-3">
    <label>Name</label>
    <input class="form-control" @bind-value="_name" />
</div>
<div class="mb-3">
    <label>Email</label>
    <input class="form-control" @bind-value="_email" />
</div>
<button class="btn btn-primary" @onclick="Create">Create</button>

@if (!string.IsNullOrWhiteSpace(_result))
{
    <pre class="mt-3">@_result</pre>
}
@if (!string.IsNullOrWhiteSpace(_error))
{
    <div class="alert alert-danger mt-3">@_error</div>
}

@code {
    private string? _name;
    private string? _email;
    private string? _result;
    private string? _error;

    private async Task Create()
    {
        _result = _error = null;
        try
        {
            var client = ClientFactory.CreateClient("wnab-api");
            var url = $"/users/create?name={Uri.EscapeDataString(_name ?? string.Empty)}&email={Uri.EscapeDataString(_email ?? string.Empty)}";
            using var resp = await client.GetAsync(url);
            _result = await resp.Content.ReadAsStringAsync();
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
    }
}
